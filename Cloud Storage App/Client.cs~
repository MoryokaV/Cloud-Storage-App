//Code by Vlaviano

using System;
using System.Net.Sockets;
using System.Windows.Forms;
using System.Threading.Tasks;
using System.Text;
using System.Threading;
using System.IO;

namespace Cloud_Storage_App
{
    class Client
    {   
        public static TcpClient clientSocket = new TcpClient();
        public static NetworkStream networkStream;
        public static byte[] buffer = new byte[1024];
        public static byte[] outStream;


        public void connectToServer()
        {
            clientSocket.Connect("192.168.0.163", 8888);
            networkStream = clientSocket.GetStream();
            //MessageBox.Show("Connected to the server!");
        }

        public static void register(string username, string password)
        {
            //Sending the initial command
            outStream = Encoding.ASCII.GetBytes("register");
            networkStream.Write(outStream, 0, outStream.Length);
            networkStream.Flush();

            //Sending the username
            outStream = Encoding.ASCII.GetBytes(username);
            networkStream.Write(outStream, 0, outStream.Length);
            networkStream.Flush();
            
            Thread.Sleep(5);

            //Sending the password
            outStream = Encoding.ASCII.GetBytes(password);
            networkStream.Write(outStream, 0, outStream.Length);
            networkStream.Flush();

            //Getting the status from the server !
            int bytesRead = networkStream.Read(buffer, 0, buffer.Length);
            string result = Encoding.ASCII.GetString(buffer, 0, bytesRead);
            RegisterForm.status = result;
        }

        public static void logIn(string username, string password)
        {

            //Sending the initial command
            outStream = Encoding.ASCII.GetBytes("login");
            networkStream.Write(outStream, 0, outStream.Length);
            networkStream.Flush();

            //Sending the username for login
            outStream = Encoding.ASCII.GetBytes(username);
            networkStream.Write(outStream, 0, outStream.Length);
            networkStream.Flush();

            Thread.Sleep(5);

            //Sending the password for login
            outStream = Encoding.ASCII.GetBytes(password);
            networkStream.Write(outStream, 0, outStream.Length);
            networkStream.Flush();

            //Getting the info about the account 
            int bytesRead = networkStream.Read(buffer, 0, buffer.Length);
            string status = Encoding.ASCII.GetString(buffer, 0, bytesRead);
            LogInForm.status = status;
        }

        public static void browseFile()
        {
            using (OpenFileDialog openFileDialog = new OpenFileDialog())
            {
                openFileDialog.InitialDirectory = "C:\\";
		        openFileDialog.RestoreDirectory = true;
		        if(openFileDialog.ShowDialog() == DialogResult.OK)
                {
                    StoreDataWindow.filePath = openFileDialog.FileName;
                }
            }
        }

        public static void getDirectorySize()
        {
            outStream = Encoding.ASCII.GetBytes("dir size");
            networkStream.Write(outStream, 0, outStream.Length);
            networkStream.Flush();

            int bytesRead = networkStream.Read(buffer, 0, buffer.Length);
            long dirSize = Convert.ToInt64(Encoding.ASCII.GetString(buffer, 0, bytesRead));
            StoreDataWindow.cloudSize = dirSize;
        }

        public static bool checkSizeAvailability(long sizeAvailable, string file_path)
        {
            FileInfo info = new FileInfo(file_path);
            if(info.Length <= sizeAvailable)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
    }
}
